// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
#include "stdafx.h"

#include <boost/smart_ptr.hpp>
#include <mesh.h>

#if MAX_VERSION_MAJOR >= 25
#include <SharedMesh.h>
#endif

namespace {
// 376 vertices
float verts[] = { -0.382569f,  -0.368232f, 0.0f, -0.385147f,  -0.360916f, 0.0f, -0.389352f,   -0.354866f, 0.0f,
                  -0.395095f,  -0.350008f, 0.0f, -0.400927f,  -0.34691f,  0.0f, -0.407575f,   -0.344697f, 0.0f,
                  -0.415435f,  -0.343369f, 0.0f, -0.424904f,  -0.342926f, 0.0f, -0.47063f,    -0.342926f, 0.0f,
                  -0.47063f,   -0.450566f, 0.0f, -0.44291f,   -0.450566f, 0.0f, -0.44291f,    -0.415466f, 0.0f,
                  -0.425599f,  -0.415466f, 0.0f, -0.414763f,  -0.414653f, 0.0f, -0.405864f,   -0.412215f, 0.0f,
                  -0.398304f,  -0.408187f, 0.0f, -0.391486f,  -0.402605f, 0.0f, -0.387323f,   -0.397359f, 0.0f,
                  -0.384245f,  -0.39101f,  0.0f, -0.382344f,  -0.384028f, 0.0f, -0.38171f,    -0.376884f, 0.0f,
                  -0.410808f,  -0.381848f, 0.0f, -0.411704f,  -0.385375f, 0.0f, -0.413268f,   -0.38833f,  0.0f,
                  -0.415572f,  -0.39084f,  0.0f, -0.419053f,  -0.392982f, 0.0f, -0.423275f,   -0.394268f, 0.0f,
                  -0.42849f,   -0.394912f, 0.0f, -0.434953f,  -0.395126f, 0.0f, -0.44291f,    -0.395126f, 0.0f,
                  -0.44291f,   -0.363266f, 0.0f, -0.438137f,  -0.363266f, 0.0f, -0.427145f,   -0.363445f, 0.0f,
                  -0.422968f,  -0.364008f, 0.0f, -0.418683f,  -0.365339f, 0.0f, -0.415628f,   -0.367115f, 0.0f,
                  -0.41297f,   -0.369874f, 0.0f, -0.411125f,  -0.373437f, 0.0f, -0.41051f,    -0.377624f, 0.0f,
                  -0.306944f,  -0.379864f, 0.0f, -0.307947f,  -0.383016f, 0.0f, -0.309674f,   -0.385593f, 0.0f,
                  -0.312179f,  -0.387935f, 0.0f, -0.315578f,  -0.38982f,  0.0f, -0.319699f,   -0.390879f, 0.0f,
                  -0.324725f,  -0.391364f, 0.0f, -0.330837f,  -0.391526f, 0.0f, -0.33937f,    -0.391526f, 0.0f,
                  -0.33937f,   -0.362726f, 0.0f, -0.329318f,  -0.362726f, 0.0f, -0.320568f,   -0.362978f, 0.0f,
                  -0.317043f,  -0.363454f, 0.0f, -0.313987f,  -0.364377f, 0.0f, -0.310534f,   -0.366336f, 0.0f,
                  -0.308274f,  -0.368904f, 0.0f, -0.307026f,  -0.372064f, 0.0f, -0.30661f,    -0.375799f, 0.0f,
                  -0.299227f,  -0.404492f, 0.0f, -0.290106f,  -0.398867f, 0.0f, -0.283363f,   -0.391976f, 0.0f,
                  -0.279198f,  -0.38335f,  0.0f, -0.27781f,   -0.372517f, 0.0f, -0.278707f,   -0.364567f, 0.0f,
                  -0.281397f,  -0.358083f, 0.0f, -0.285609f,  -0.352865f, 0.0f, -0.291071f,   -0.348714f, 0.0f,
                  -0.297304f,  -0.34573f,  0.0f, -0.30397f,   -0.344012f, 0.0f, -0.311525f,   -0.343198f, 0.0f,
                  -0.320422f,  -0.342926f, 0.0f, -0.36709f,   -0.342926f, 0.0f, -0.36709f,    -0.450566f, 0.0f,
                  -0.33937f,   -0.450566f, 0.0f, -0.33937f,   -0.411146f, 0.0f, -0.32659f,    -0.411146f, 0.0f,
                  -0.297264f,  -0.450566f, 0.0f, -0.26323f,   -0.450566f, 0.0f, -0.17193f,    -0.342926f, 0.0f,
                  -0.26697f,   -0.342926f, 0.0f, -0.26697f,   -0.363806f, 0.0f, -0.23331f,    -0.363806f, 0.0f,
                  -0.23331f,   -0.450566f, 0.0f, -0.20559f,   -0.450566f, 0.0f, -0.20559f,    -0.363806f, 0.0f,
                  -0.17193f,   -0.363806f, 0.0f, -0.026263f,  -0.406677f, 0.0f, -0.0306822f,  -0.398632f, 0.0f,
                  -0.0381916f, -0.392365f, 0.0f, -0.0489353f, -0.387566f, 0.0f, -0.0550163f,  -0.385753f, 0.0f,
                  -0.0606817f, -0.384375f, 0.0f, -0.0720681f, -0.381981f, 0.0f, -0.0796587f,  -0.379994f, 0.0f,
                  -0.0843574f, -0.377808f, 0.0f, -0.0867968f, -0.375024f, 0.0f, -0.08761f,    -0.371242f, 0.0f,
                  -0.0871045f, -0.368546f, 0.0f, -0.0855878f, -0.36616f,  0.0f, -0.0833666f,  -0.364213f, 0.0f,
                  -0.0807475f, -0.362833f, 0.0f, -0.0775082f, -0.361727f, 0.0f, -0.0741409f,  -0.361042f, 0.0f,
                  -0.0707012f, -0.360685f, 0.0f, -0.0672447f, -0.360566f, 0.0f, -0.0575205f,  -0.361444f, 0.0f,
                  -0.0479959f, -0.364079f, 0.0f, -0.0393025f, -0.368017f, 0.0f, -0.0320716f,  -0.372806f, 0.0f,
                  -0.02911f,   -0.372806f, 0.0f, -0.02911f,   -0.348f,    0.0f, -0.037397f,   -0.345152f, 0.0f,
                  -0.0470763f, -0.342828f, 0.0f, -0.0575148f, -0.341282f, 0.0f, -0.06808f,    -0.340766f, 0.0f,
                  -0.0873386f, -0.343152f, 0.0f, -0.102747f,  -0.350308f, 0.0f, -0.112859f,   -0.361237f, 0.0f,
                  -0.11623f,   -0.374941f, 0.0f, -0.114739f,  -0.385272f, 0.0f, -0.110266f,   -0.393771f, 0.0f,
                  -0.102396f,  -0.400564f, 0.0f, -0.0907122f, -0.40578f,  0.0f, -0.084576f,   -0.407568f, 0.0f,
                  -0.078025f,  -0.40901f,  0.0f, -0.0651944f, -0.411731f, 0.0f, -0.0601055f,  -0.413409f, 0.0f,
                  -0.0564095f, -0.415686f, 0.0f, -0.0541599f, -0.418507f, 0.0f, -0.05341f,    -0.421817f, 0.0f,
                  -0.0539257f, -0.425183f, 0.0f, -0.055473f,  -0.427608f, 0.0f, -0.0578161f,  -0.429399f, 0.0f,
                  -0.0607197f, -0.430865f, 0.0f, -0.0637044f, -0.431733f, 0.0f, -0.06745f,    -0.432312f, 0.0f,
                  -0.0711773f, -0.432638f, 0.0f, -0.0741072f, -0.432746f, 0.0f, -0.0841583f,  -0.431826f, 0.0f,
                  -0.0946244f, -0.429065f, 0.0f, -0.104782f,  -0.424589f, 0.0f, -0.11391f,    -0.418526f, 0.0f,
                  -0.11695f,   -0.418526f, 0.0f, -0.11695f,   -0.444393f, 0.0f, -0.107945f,   -0.447699f, 0.0f,
                  -0.0983073f, -0.450371f, 0.0f, -0.0874929f, -0.452137f, 0.0f, -0.0749594f,  -0.452726f, 0.0f,
                  -0.0542091f, -0.450232f, 0.0f, -0.0382914f, -0.442749f, 0.0f, -0.0281653f,  -0.431275f, 0.0f,
                  -0.02479f,   -0.416808f, 0.0f, 0.06867f,    -0.369386f, 0.0f, 0.04257f,     -0.369386f, 0.0f,
                  0.04257f,    -0.426832f, 0.0f, 0.0387401f,  -0.428925f, 0.0f, 0.0347653f,   -0.43044f,  0.0f,
                  0.0308988f,  -0.43136f,  0.0f, 0.0273938f,  -0.431666f, 0.0f, 0.0229585f,   -0.43136f,  0.0f,
                  0.0196256f,  -0.43044f,  0.0f, 0.0171964f,  -0.428852f, 0.0f, 0.0154716f,   -0.426542f, 0.0f,
                  0.0142879f,  -0.423521f, 0.0f, 0.013628f,   -0.419795f, 0.0f, 0.0133295f,   -0.415203f, 0.0f,
                  0.01323f,    -0.409582f, 0.0f, 0.01323f,    -0.369386f, 0.0f, -0.01287f,    -0.369386f, 0.0f,
                  -0.01287f,   -0.422177f, 0.0f, -0.0110563f, -0.43543f,  0.0f, -0.00561514f, -0.444999f, 0.0f,
                  0.00318271f, -0.450794f, 0.0f, 0.0150666f,  -0.452726f, 0.0f, 0.0227911f,   -0.452013f, 0.0f,
                  0.0293597f,  -0.449873f, 0.0f, 0.0356576f,  -0.446361f, 0.0f, 0.04257f,     -0.441532f, 0.0f,
                  0.04257f,    -0.450566f, 0.0f, 0.06867f,    -0.450566f, 0.0f, 0.14701f,     -0.369316f, 0.0f,
                  0.145603f,   -0.369188f, 0.0f, 0.14398f,    -0.369098f, 0.0f, 0.140876f,    -0.369026f, 0.0f,
                  0.135285f,   -0.369641f, 0.0f, 0.129187f,   -0.371484f, 0.0f, 0.122278f,    -0.375172f, 0.0f,
                  0.11425f,    -0.38132f,  0.0f, 0.11425f,    -0.369386f, 0.0f, 0.08815f,     -0.369386f, 0.0f,
                  0.08815f,    -0.450566f, 0.0f, 0.11425f,    -0.450566f, 0.0f, 0.11425f,     -0.39615f,  0.0f,
                  0.118995f,   -0.394667f, 0.0f, 0.123415f,   -0.39369f,  0.0f, 0.127996f,    -0.393147f, 0.0f,
                  0.133229f,   -0.392966f, 0.0f, 0.135988f,   -0.393034f, 0.0f, 0.139361f,    -0.393236f, 0.0f,
                  0.142536f,   -0.393574f, 0.0f, 0.144701f,   -0.394046f, 0.0f, 0.14701f,     -0.394046f, 0.0f,
                  0.20951f,    -0.338806f, 0.0f, 0.205619f,   -0.338212f, 0.0f, 0.201184f,    -0.337747f, 0.0f,
                  0.196205f,   -0.337446f, 0.0f, 0.190683f,   -0.337346f, 0.0f, 0.176644f,    -0.339208f, 0.0f,
                  0.166678f,   -0.344795f, 0.0f, 0.160732f,   -0.354107f, 0.0f, 0.15875f,     -0.367145f, 0.0f,
                  0.15875f,    -0.369386f, 0.0f, 0.14759f,    -0.369386f, 0.0f, 0.14759f,     -0.387026f, 0.0f,
                  0.15875f,    -0.387026f, 0.0f, 0.15875f,    -0.450566f, 0.0f, 0.18485f,     -0.450566f, 0.0f,
                  0.18485f,    -0.387026f, 0.0f, 0.20411f,    -0.387026f, 0.0f, 0.20411f,     -0.369386f, 0.0f,
                  0.18395f,    -0.369386f, 0.0f, 0.18395f,    -0.368742f, 0.0f, 0.184629f,    -0.362225f, 0.0f,
                  0.186666f,   -0.358242f, 0.0f, 0.190621f,   -0.356205f, 0.0f, 0.197056f,    -0.355526f, 0.0f,
                  0.200143f,   -0.355688f, 0.0f, 0.20303f,    -0.356174f, 0.0f, 0.207555f,    -0.357326f, 0.0f,
                  0.20951f,    -0.357326f, 0.0f, 0.260446f,   -0.431655f, 0.0f, 0.256675f,    -0.433497f, 0.0f,
                  0.252686f,   -0.434689f, 0.0f, 0.248751f,   -0.435086f, 0.0f, 0.244482f,    -0.434915f, 0.0f,
                  0.241516f,   -0.4344f,   0.0f, 0.239362f,   -0.433524f, 0.0f, 0.237534f,    -0.432268f, 0.0f,
                  0.236124f,   -0.430789f, 0.0f, 0.235365f,   -0.429236f, 0.0f, 0.235039f,    -0.427412f, 0.0f,
                  0.23493f,    -0.425119f, 0.0f, 0.235446f,   -0.421661f, 0.0f, 0.236993f,    -0.418944f, 0.0f,
                  0.239517f,   -0.416876f, 0.0f, 0.242963f,   -0.415368f, 0.0f, 0.246888f,    -0.414419f, 0.0f,
                  0.252297f,   -0.413597f, 0.0f, 0.26373f,    -0.412406f, 0.0f, 0.26373f,     -0.429307f, 0.0f,
                  0.26373f,    -0.450566f, 0.0f, 0.28947f,    -0.450566f, 0.0f, 0.28947f,     -0.395202f, 0.0f,
                  0.287002f,   -0.382511f, 0.0f, 0.279598f,   -0.373715f, 0.0f, 0.266645f,    -0.368578f, 0.0f,
                  0.247527f,   -0.366866f, 0.0f, 0.238207f,   -0.367233f, 0.0f, 0.228906f,    -0.368333f, 0.0f,
                  0.220906f,   -0.369702f, 0.0f, 0.21549f,    -0.370874f, 0.0f, 0.21549f,     -0.390266f, 0.0f,
                  0.217881f,   -0.390266f, 0.0f, 0.228383f,   -0.386774f, 0.0f, 0.235481f,    -0.385073f, 0.0f,
                  0.242144f,   -0.384506f, 0.0f, 0.251561f,   -0.385164f, 0.0f, 0.258369f,    -0.387137f, 0.0f,
                  0.262497f,   -0.390834f, 0.0f, 0.263873f,   -0.396662f, 0.0f, 0.263873f,    -0.397106f, 0.0f,
                  0.252572f,   -0.397939f, 0.0f, 0.241669f,   -0.399134f, 0.0f, 0.231832f,    -0.40098f,  0.0f,
                  0.223731f,   -0.403769f, 0.0f, 0.217258f,   -0.407626f, 0.0f, 0.212448f,    -0.412678f, 0.0f,
                  0.209465f,   -0.419141f, 0.0f, 0.20847f,    -0.427234f, 0.0f, 0.210423f,    -0.43739f,  0.0f,
                  0.216282f,   -0.445556f, 0.0f, 0.225034f,   -0.450934f, 0.0f, 0.235667f,    -0.452726f, 0.0f,
                  0.240385f,   -0.452519f, 0.0f, 0.244706f,   -0.451898f, 0.0f, 0.248757f,    -0.450844f, 0.0f,
                  0.252663f,   -0.449337f, 0.0f, 0.255503f,   -0.4478f,   0.0f, 0.258523f,    -0.445792f, 0.0f,
                  0.26373f,    -0.441957f, 0.0f, 0.358525f,   -0.452302f, 0.0f, 0.365577f,    -0.45103f,  0.0f,
                  0.37214f,    -0.449036f, 0.0f, 0.37843f,    -0.446446f, 0.0f, 0.37843f,     -0.424286f, 0.0f,
                  0.374743f,   -0.424286f, 0.0f, 0.371271f,   -0.427394f, 0.0f, 0.369246f,    -0.428947f, 0.0f,
                  0.366933f,   -0.430429f, 0.0f, 0.363994f,   -0.431848f, 0.0f, 0.360386f,    -0.433067f, 0.0f,
                  0.356201f,   -0.433906f, 0.0f, 0.351528f,   -0.434186f, 0.0f, 0.342171f,    -0.432663f, 0.0f,
                  0.335219f,   -0.428093f, 0.0f, 0.330907f,   -0.420585f, 0.0f, 0.32947f,     -0.410249f, 0.0f,
                  0.330871f,   -0.400049f, 0.0f, 0.335075f,   -0.392224f, 0.0f, 0.341882f,    -0.387246f, 0.0f,
                  0.351093f,   -0.385586f, 0.0f, 0.355505f,   -0.385852f, 0.0f, 0.359339f,    -0.386649f, 0.0f,
                  0.362738f,   -0.38785f,  0.0f, 0.365847f,   -0.389324f, 0.0f, 0.368713f,    -0.391027f, 0.0f,
                  0.371091f,   -0.392768f, 0.0f, 0.374743f,   -0.395846f, 0.0f, 0.37843f,     -0.395846f, 0.0f,
                  0.37843f,    -0.373574f, 0.0f, 0.372111f,   -0.370946f, 0.0f, 0.365322f,    -0.36886f,  0.0f,
                  0.357973f,   -0.3675f,   0.0f, 0.349973f,   -0.367046f, 0.0f, 0.340866f,    -0.367643f, 0.0f,
                  0.332086f,   -0.369434f, 0.0f, 0.323976f,   -0.372509f, 0.0f, 0.316881f,    -0.37696f,  0.0f,
                  0.310824f,   -0.383094f, 0.0f, 0.306271f,   -0.390637f, 0.0f, 0.30342f,     -0.399665f, 0.0f,
                  0.30247f,    -0.410249f, 0.0f, 0.303357f,   -0.420342f, 0.0f, 0.306018f,    -0.429062f, 0.0f,
                  0.310291f,   -0.436407f, 0.0f, 0.316012f,   -0.442379f, 0.0f, 0.323099f,    -0.446974f, 0.0f,
                  0.331326f,   -0.450194f, 0.0f, 0.340586f,   -0.452093f, 0.0f, 0.350769f,    -0.452726f, 0.0f,
                  0.47063f,    -0.405648f, 0.0f, 0.468131f,   -0.389065f, 0.0f, 0.460636f,    -0.376869f, 0.0f,
                  0.448179f,   -0.369367f, 0.0f, 0.430797f,   -0.366866f, 0.0f, 0.411577f,    -0.369802f, 0.0f,
                  0.396938f,   -0.378611f, 0.0f, 0.387677f,   -0.392442f, 0.0f, 0.38459f,     -0.410446f, 0.0f,
                  0.387852f,   -0.428424f, 0.0f, 0.397639f,   -0.441741f, 0.0f, 0.413551f,    -0.44998f,  0.0f,
                  0.43519f,    -0.452726f, 0.0f, 0.44427f,    -0.452327f, 0.0f, 0.452516f,    -0.45113f,  0.0f,
                  0.460599f,   -0.449044f, 0.0f, 0.46919f,    -0.445979f, 0.0f, 0.46919f,     -0.425006f, 0.0f,
                  0.466276f,   -0.425006f, 0.0f, 0.46094f,    -0.428371f, 0.0f, 0.453965f,    -0.431514f, 0.0f,
                  0.446042f,   -0.433788f, 0.0f, 0.437864f,   -0.434546f, 0.0f, 0.426344f,    -0.433272f, 0.0f,
                  0.418011f,   -0.42945f,  0.0f, 0.412811f,   -0.423226f, 0.0f, 0.41069f,     -0.414746f, 0.0f,
                  0.47063f,    -0.414746f, 0.0f, 0.410617f,   -0.399446f, 0.0f, 0.41227f,     -0.392032f, 0.0f,
                  0.416063f,   -0.386963f, 0.0f, 0.4216f,     -0.38404f,  0.0f, 0.428482f,    -0.383066f, 0.0f,
                  0.435544f,   -0.384095f, 0.0f, 0.440465f,   -0.387179f, 0.0f, 0.443405f,    -0.392303f, 0.0f,
                  0.44453f,    -0.399446f, 0.0f };

// 364 faces
int faces[] = { 21,  22,  1,   1, 1, 38,  21,  1,   1, 1, 37,  38,  1,   1, 1, 0,   1,   22,  1, 1, 20,  0,   22,  1, 1,
                19,  20,  22,  1, 1, 18,  19,  22,  1, 1, 17,  18,  22,  1, 1, 16,  17,  22,  1, 1, 16,  22,  23,  1, 2,
                15,  16,  23,  1, 1, 15,  23,  24,  1, 2, 14,  15,  24,  1, 1, 13,  14,  24,  1, 1, 13,  24,  25,  1, 2,
                37,  1,   2,   1, 2, 36,  37,  2,   1, 1, 36,  2,   3,   1, 2, 36,  3,   4,   1, 2, 35,  36,  4,   1, 1,
                35,  4,   5,   1, 2, 34,  35,  5,   1, 1, 34,  5,   6,   1, 2, 33,  34,  6,   1, 1, 33,  6,   7,   1, 2,
                32,  33,  7,   1, 1, 12,  13,  25,  1, 1, 12,  25,  26,  1, 2, 12,  26,  27,  1, 2, 11,  12,  27,  1, 1,
                11,  27,  28,  1, 2, 11,  28,  29,  1, 2, 32,  7,   8,   1, 2, 31,  32,  8,   1, 1, 30,  31,  8,   1, 1,
                30,  8,   9,   1, 2, 29,  30,  9,   1, 1, 11,  29,  9,   1, 0, 10,  11,  9,   1, 5, 75,  76,  57,  1, 3,
                74,  75,  57,  1, 1, 57,  40,  41,  1, 2, 74,  57,  41,  1, 0, 74,  41,  42,  1, 2, 74,  42,  43,  1, 2,
                74,  43,  44,  1, 2, 74,  44,  45,  1, 2, 40,  57,  58,  1, 2, 74,  45,  46,  1, 2, 73,  74,  46,  1, 1,
                73,  46,  47,  1, 2, 71,  72,  73,  1, 3, 70,  71,  73,  1, 1, 70,  73,  47,  1, 0, 70,  47,  48,  1, 2,
                69,  70,  48,  1, 1, 69,  48,  49,  1, 2, 69,  49,  50,  1, 2, 68,  69,  50,  1, 1, 68,  50,  51,  1, 2,
                68,  51,  52,  1, 2, 67,  68,  52,  1, 1, 40,  58,  59,  1, 2, 39,  40,  59,  1, 1, 39,  59,  60,  1, 2,
                39,  60,  61,  1, 2, 56,  39,  61,  1, 1, 55,  56,  61,  1, 1, 55,  61,  62,  1, 2, 55,  62,  63,  1, 2,
                55,  63,  64,  1, 2, 54,  55,  64,  1, 1, 54,  64,  65,  1, 2, 54,  65,  66,  1, 2, 53,  54,  66,  1, 1,
                53,  66,  67,  1, 2, 53,  67,  52,  1, 4, 83,  84,  77,  1, 3, 83,  77,  78,  1, 2, 81,  82,  83,  1, 3,
                80,  81,  83,  1, 1, 80,  83,  78,  1, 0, 79,  80,  78,  1, 5, 140, 141, 142, 1, 3, 139, 140, 142, 1, 1,
                139, 142, 143, 1, 2, 138, 139, 143, 1, 1, 138, 143, 144, 1, 2, 137, 138, 144, 1, 1, 137, 144, 145, 1, 2,
                137, 145, 146, 1, 2, 136, 137, 146, 1, 1, 136, 146, 147, 1, 2, 135, 136, 147, 1, 1, 134, 135, 147, 1, 1,
                133, 134, 147, 1, 1, 132, 133, 147, 1, 1, 132, 147, 148, 1, 2, 131, 132, 148, 1, 1, 130, 131, 148, 1, 1,
                107, 108, 109, 1, 3, 106, 107, 109, 1, 1, 106, 109, 110, 1, 2, 105, 106, 110, 1, 1, 105, 110, 111, 1, 2,
                104, 105, 111, 1, 1, 104, 111, 112, 1, 2, 103, 104, 112, 1, 1, 103, 112, 113, 1, 2, 103, 113, 114, 1, 2,
                102, 103, 114, 1, 1, 101, 102, 114, 1, 1, 100, 101, 114, 1, 1, 99,  100, 114, 1, 1, 99,  114, 115, 1, 2,
                98,  99,  115, 1, 1, 97,  98,  115, 1, 1, 130, 148, 149, 1, 2, 129, 130, 149, 1, 1, 129, 149, 150, 1, 2,
                128, 129, 150, 1, 1, 97,  115, 116, 1, 2, 96,  97,  116, 1, 1, 96,  116, 117, 1, 2, 95,  96,  117, 1, 1,
                95,  117, 118, 1, 2, 94,  95,  118, 1, 1, 94,  118, 119, 1, 2, 94,  119, 120, 1, 2, 93,  94,  120, 1, 1,
                93,  120, 121, 1, 2, 92,  93,  121, 1, 1, 92,  121, 122, 1, 2, 91,  92,  122, 1, 1, 91,  122, 123, 1, 2,
                91,  123, 124, 1, 2, 90,  91,  124, 1, 1, 89,  90,  124, 1, 1, 89,  124, 125, 1, 2, 88,  89,  125, 1, 1,
                87,  88,  125, 1, 1, 87,  125, 126, 1, 2, 86,  87,  126, 1, 1, 86,  126, 127, 1, 2, 85,  86,  127, 1, 1,
                150, 85,  127, 1, 1, 128, 150, 127, 1, 4, 177, 178, 151, 1, 3, 176, 177, 151, 1, 1, 166, 167, 168, 1, 3,
                165, 166, 168, 1, 1, 164, 165, 168, 1, 1, 163, 164, 168, 1, 1, 163, 168, 169, 1, 2, 162, 163, 169, 1, 1,
                162, 169, 170, 1, 2, 161, 162, 170, 1, 1, 161, 170, 171, 1, 2, 160, 161, 171, 1, 1, 160, 171, 172, 1, 2,
                159, 160, 172, 1, 1, 159, 172, 173, 1, 2, 158, 159, 173, 1, 1, 158, 173, 174, 1, 2, 157, 158, 174, 1, 1,
                157, 174, 175, 1, 2, 156, 157, 175, 1, 1, 156, 175, 176, 1, 2, 155, 156, 176, 1, 1, 154, 155, 176, 1, 1,
                151, 152, 153, 1, 3, 176, 151, 153, 1, 0, 154, 176, 153, 1, 4, 199, 200, 179, 1, 3, 198, 199, 179, 1, 1,
                198, 179, 180, 1, 2, 198, 180, 181, 1, 2, 197, 198, 181, 1, 1, 197, 181, 182, 1, 2, 197, 182, 183, 1, 2,
                196, 197, 183, 1, 1, 196, 183, 184, 1, 2, 195, 196, 184, 1, 1, 195, 184, 185, 1, 2, 194, 195, 185, 1, 1,
                194, 185, 186, 1, 2, 193, 194, 186, 1, 1, 192, 193, 186, 1, 1, 191, 192, 186, 1, 1, 189, 190, 191, 1, 3,
                188, 189, 191, 1, 1, 188, 191, 186, 1, 0, 187, 188, 186, 1, 5, 227, 228, 201, 1, 3, 226, 227, 201, 1, 1,
                226, 201, 202, 1, 2, 226, 202, 203, 1, 2, 225, 226, 203, 1, 1, 217, 218, 219, 1, 3, 216, 217, 219, 1, 1,
                214, 215, 216, 1, 3, 213, 214, 216, 1, 1, 213, 216, 219, 1, 0, 211, 212, 213, 1, 3, 210, 211, 213, 1, 1,
                210, 213, 219, 1, 0, 209, 210, 219, 1, 1, 209, 219, 220, 1, 2, 208, 209, 220, 1, 1, 208, 220, 221, 1, 2,
                207, 208, 221, 1, 1, 207, 221, 222, 1, 2, 206, 207, 222, 1, 1, 205, 206, 222, 1, 1, 205, 222, 223, 1, 2,
                205, 223, 224, 1, 2, 204, 205, 224, 1, 1, 203, 204, 224, 1, 1, 225, 203, 224, 1, 4, 229, 230, 250, 1, 1,
                248, 229, 250, 1, 1, 248, 250, 251, 1, 2, 247, 248, 251, 1, 1, 259, 260, 261, 1, 3, 259, 261, 262, 1, 2,
                258, 259, 262, 1, 1, 257, 258, 262, 1, 1, 257, 262, 263, 1, 2, 256, 257, 263, 1, 1, 256, 263, 264, 1, 2,
                255, 256, 264, 1, 1, 255, 264, 265, 1, 2, 254, 255, 265, 1, 1, 254, 265, 266, 1, 2, 288, 249, 250, 1, 3,
                288, 250, 230, 1, 0, 287, 288, 230, 1, 1, 287, 230, 231, 1, 2, 253, 254, 266, 1, 1, 253, 266, 267, 1, 2,
                252, 253, 267, 1, 1, 251, 252, 267, 1, 1, 251, 267, 268, 1, 2, 251, 268, 269, 1, 2, 247, 251, 269, 1, 0,
                247, 269, 270, 1, 2, 246, 247, 270, 1, 1, 246, 270, 271, 1, 2, 245, 246, 271, 1, 1, 244, 245, 271, 1, 1,
                244, 271, 272, 1, 2, 243, 244, 272, 1, 1, 286, 287, 231, 1, 1, 286, 231, 232, 1, 2, 285, 286, 232, 1, 1,
                284, 285, 232, 1, 1, 284, 232, 233, 1, 2, 283, 284, 233, 1, 1, 243, 272, 273, 1, 2, 242, 243, 273, 1, 1,
                282, 283, 233, 1, 1, 282, 233, 234, 1, 2, 281, 282, 234, 1, 1, 281, 234, 235, 1, 2, 280, 281, 235, 1, 1,
                280, 235, 236, 1, 2, 279, 280, 236, 1, 1, 279, 236, 237, 1, 2, 278, 279, 237, 1, 1, 278, 237, 238, 1, 2,
                277, 278, 238, 1, 1, 277, 238, 239, 1, 2, 276, 277, 239, 1, 1, 276, 239, 240, 1, 2, 275, 276, 240, 1, 1,
                275, 240, 241, 1, 2, 274, 275, 241, 1, 1, 273, 274, 241, 1, 1, 242, 273, 241, 1, 4, 316, 317, 318, 1, 3,
                315, 316, 318, 1, 1, 314, 315, 318, 1, 1, 314, 318, 319, 1, 2, 313, 314, 319, 1, 1, 312, 313, 319, 1, 1,
                312, 319, 320, 1, 2, 311, 312, 320, 1, 1, 311, 320, 321, 1, 2, 310, 311, 321, 1, 1, 310, 321, 322, 1, 2,
                309, 310, 322, 1, 1, 309, 322, 323, 1, 2, 308, 309, 323, 1, 1, 308, 323, 324, 1, 2, 292, 293, 294, 1, 3,
                292, 294, 295, 1, 2, 292, 295, 296, 1, 2, 291, 292, 296, 1, 1, 291, 296, 297, 1, 2, 291, 297, 298, 1, 2,
                290, 291, 298, 1, 1, 290, 298, 299, 1, 2, 289, 290, 299, 1, 1, 289, 299, 300, 1, 2, 338, 289, 300, 1, 1,
                338, 300, 301, 1, 2, 337, 338, 301, 1, 1, 337, 301, 302, 1, 2, 336, 337, 302, 1, 1, 336, 302, 303, 1, 2,
                335, 336, 303, 1, 1, 334, 335, 303, 1, 1, 334, 303, 304, 1, 2, 333, 334, 304, 1, 1, 332, 333, 304, 1, 1,
                331, 332, 304, 1, 1, 331, 304, 305, 1, 2, 330, 331, 305, 1, 1, 329, 330, 305, 1, 1, 329, 305, 306, 1, 2,
                328, 329, 306, 1, 1, 327, 328, 306, 1, 1, 327, 306, 307, 1, 2, 326, 327, 307, 1, 1, 325, 326, 307, 1, 1,
                324, 325, 307, 1, 1, 308, 324, 307, 1, 4, 375, 367, 339, 1, 1, 375, 339, 340, 1, 2, 374, 375, 340, 1, 1,
                374, 340, 341, 1, 2, 374, 341, 342, 1, 2, 373, 374, 342, 1, 1, 373, 342, 343, 1, 2, 372, 373, 343, 1, 1,
                371, 372, 343, 1, 1, 371, 343, 344, 1, 2, 370, 371, 344, 1, 1, 369, 370, 344, 1, 1, 369, 344, 345, 1, 2,
                368, 369, 345, 1, 1, 368, 345, 346, 1, 2, 367, 368, 346, 1, 1, 367, 346, 347, 1, 2, 365, 366, 339, 1, 3,
                365, 339, 367, 1, 0, 365, 367, 347, 1, 0, 365, 347, 348, 1, 2, 364, 365, 348, 1, 1, 364, 348, 349, 1, 2,
                364, 349, 350, 1, 2, 363, 364, 350, 1, 1, 362, 363, 350, 1, 1, 362, 350, 351, 1, 2, 361, 362, 351, 1, 1,
                361, 351, 352, 1, 2, 360, 361, 352, 1, 1, 360, 352, 353, 1, 2, 359, 360, 353, 1, 1, 359, 353, 354, 1, 2,
                355, 356, 357, 1, 3, 355, 357, 358, 1, 2, 354, 355, 358, 1, 1, 359, 354, 358, 1, 4 };

#if MAX_VERSION_MAJOR >= 25
MaxSDK::SharedMeshPtr g_globalMesh;
#else
Mesh g_globalMesh;
#endif
} // namespace

namespace krakatoa {
namespace max3d {

extern void build_icon_mesh( Mesh& outMesh, float verts[], int faces[], int vertCount, int faceCount );

}
} // namespace krakatoa

#if MAX_VERSION_MAJOR >= 25

static void InitializeIconMesh() {
    if( !g_globalMesh ) {
        g_globalMesh = new MaxSDK::SharedMesh();
        int vertCount = sizeof( verts ) / sizeof( verts[0] ) / 3;
        int faceCount = sizeof( faces ) / sizeof( faces[0] ) / 5;

        krakatoa::max3d::build_icon_mesh( g_globalMesh->GetMesh(), verts, faces, vertCount, faceCount );

        g_globalMesh->GetMesh().buildBoundingBox();
    }
}

Mesh* GetPRTSurfaceIconMesh() {
    InitializeIconMesh();
    return g_globalMesh->GetMeshPtr();
}

MaxSDK::SharedMeshPtr GetPRTSurfaceIconMeshShared() {
    InitializeIconMesh();
    return g_globalMesh;
}

#else

Mesh* GetPRTSurfaceIconMesh() {
    if( g_globalMesh.getNumVerts() == 0 ) {
        int vertCount = sizeof( verts ) / sizeof( verts[0] ) / 3;
        int faceCount = sizeof( faces ) / sizeof( faces[0] ) / 5;

        krakatoa::max3d::build_icon_mesh( g_globalMesh, verts, faces, vertCount, faceCount );

        g_globalMesh.buildBoundingBox();
    }

    return &g_globalMesh;
}

#endif
