// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
#include "stdafx.h"

#include <boost/smart_ptr.hpp>
#include <mesh.h>

#if MAX_VERSION_MAJOR >= 25
#include <SharedMesh.h>
#endif

namespace {
float verts[] = { -0.386599f,    -0.368268f, 0.0f, -0.389177f,   -0.360952f, 0.0f, -0.393382f,   -0.354901f, 0.0f,
                  -0.399125f,    -0.350044f, 0.0f, -0.404958f,   -0.346946f, 0.0f, -0.411605f,   -0.344732f, 0.0f,
                  -0.419465f,    -0.343405f, 0.0f, -0.428935f,   -0.342962f, 0.0f, -0.47466f,    -0.342962f, 0.0f,
                  -0.47466f,     -0.450602f, 0.0f, -0.44694f,    -0.450602f, 0.0f, -0.44694f,    -0.415502f, 0.0f,
                  -0.429629f,    -0.415502f, 0.0f, -0.418793f,   -0.414689f, 0.0f, -0.409894f,   -0.412251f, 0.0f,
                  -0.402334f,    -0.408223f, 0.0f, -0.395516f,   -0.40264f,  0.0f, -0.391354f,   -0.397395f, 0.0f,
                  -0.388276f,    -0.391046f, 0.0f, -0.386374f,   -0.384064f, 0.0f, -0.38574f,    -0.37692f,  0.0f,
                  -0.414839f,    -0.381884f, 0.0f, -0.415734f,   -0.385411f, 0.0f, -0.417298f,   -0.388366f, 0.0f,
                  -0.419603f,    -0.390876f, 0.0f, -0.423083f,   -0.393018f, 0.0f, -0.427305f,   -0.394304f, 0.0f,
                  -0.43252f,     -0.394948f, 0.0f, -0.438984f,   -0.395162f, 0.0f, -0.44694f,    -0.395162f, 0.0f,
                  -0.44694f,     -0.363302f, 0.0f, -0.442167f,   -0.363302f, 0.0f, -0.431175f,   -0.363481f, 0.0f,
                  -0.426998f,    -0.364043f, 0.0f, -0.422713f,   -0.365375f, 0.0f, -0.419658f,   -0.367151f, 0.0f,
                  -0.417f,       -0.36991f,  0.0f, -0.415155f,   -0.373472f, 0.0f, -0.41454f,    -0.37766f,  0.0f,
                  -0.303974f,    -0.3799f,   0.0f, -0.304977f,   -0.383051f, 0.0f, -0.306704f,   -0.385628f, 0.0f,
                  -0.309209f,    -0.38797f,  0.0f, -0.312608f,   -0.389855f, 0.0f, -0.31673f,    -0.390915f, 0.0f,
                  -0.321755f,    -0.3914f,   0.0f, -0.327867f,   -0.391562f, 0.0f, -0.3364f,     -0.391562f, 0.0f,
                  -0.3364f,      -0.362762f, 0.0f, -0.326348f,   -0.362762f, 0.0f, -0.317599f,   -0.363014f, 0.0f,
                  -0.314073f,    -0.363489f, 0.0f, -0.311017f,   -0.364413f, 0.0f, -0.307564f,   -0.366371f, 0.0f,
                  -0.305304f,    -0.36894f,  0.0f, -0.304056f,   -0.3721f,   0.0f, -0.30364f,    -0.375834f, 0.0f,
                  -0.296257f,    -0.404528f, 0.0f, -0.287136f,   -0.398903f, 0.0f, -0.280393f,   -0.392012f, 0.0f,
                  -0.276228f,    -0.383385f, 0.0f, -0.27484f,    -0.372552f, 0.0f, -0.275737f,   -0.364603f, 0.0f,
                  -0.278427f,    -0.358119f, 0.0f, -0.28264f,    -0.352901f, 0.0f, -0.288101f,   -0.34875f,  0.0f,
                  -0.294334f,    -0.345766f, 0.0f, -0.301001f,   -0.344048f, 0.0f, -0.308555f,   -0.343233f, 0.0f,
                  -0.317452f,    -0.342962f, 0.0f, -0.36412f,    -0.342962f, 0.0f, -0.36412f,    -0.450602f, 0.0f,
                  -0.3364f,      -0.450602f, 0.0f, -0.3364f,     -0.411182f, 0.0f, -0.32362f,    -0.411182f, 0.0f,
                  -0.294294f,    -0.450602f, 0.0f, -0.26026f,    -0.450602f, 0.0f, -0.16196f,    -0.342962f, 0.0f,
                  -0.257f,       -0.342962f, 0.0f, -0.257f,      -0.363842f, 0.0f, -0.22334f,    -0.363842f, 0.0f,
                  -0.22334f,     -0.450602f, 0.0f, -0.19562f,    -0.450602f, 0.0f, -0.19562f,    -0.363842f, 0.0f,
                  -0.16196f,     -0.363842f, 0.0f, -0.00229316f, -0.406713f, 0.0f, -0.0067123f,  -0.398668f, 0.0f,
                  -0.0142217f,   -0.3924f,   0.0f, -0.0249654f,  -0.387602f, 0.0f, -0.0310464f,  -0.385789f, 0.0f,
                  -0.0367118f,   -0.384411f, 0.0f, -0.0480982f,  -0.382016f, 0.0f, -0.0556888f,  -0.38003f,  0.0f,
                  -0.0603875f,   -0.377844f, 0.0f, -0.062827f,   -0.37506f,  0.0f, -0.0636401f,  -0.371278f, 0.0f,
                  -0.0631346f,   -0.368582f, 0.0f, -0.0616179f,  -0.366196f, 0.0f, -0.0593968f,  -0.364249f, 0.0f,
                  -0.0567776f,   -0.362869f, 0.0f, -0.0535383f,  -0.361763f, 0.0f, -0.0501711f,  -0.361077f, 0.0f,
                  -0.0467314f,   -0.360721f, 0.0f, -0.0432748f,  -0.360602f, 0.0f, -0.0335506f,  -0.36148f,  0.0f,
                  -0.024026f,    -0.364115f, 0.0f, -0.0153326f,  -0.368053f, 0.0f, -0.00810168f, -0.372842f, 0.0f,
                  -0.00514011f,  -0.372842f, 0.0f, -0.00514011f, -0.348036f, 0.0f, -0.0134272f,  -0.345187f, 0.0f,
                  -0.0231064f,   -0.342864f, 0.0f, -0.033545f,   -0.341317f, 0.0f, -0.0441101f,  -0.340802f, 0.0f,
                  -0.0633687f,   -0.343187f, 0.0f, -0.078777f,   -0.350343f, 0.0f, -0.0888893f,  -0.361272f, 0.0f,
                  -0.0922601f,   -0.374977f, 0.0f, -0.0907691f,  -0.385308f, 0.0f, -0.0862962f,  -0.393806f, 0.0f,
                  -0.0784258f,   -0.4006f,   0.0f, -0.0667423f,  -0.405816f, 0.0f, -0.0606061f,  -0.407603f, 0.0f,
                  -0.0540551f,   -0.409046f, 0.0f, -0.0412245f,  -0.411767f, 0.0f, -0.0361356f,  -0.413445f, 0.0f,
                  -0.0324397f,   -0.415721f, 0.0f, -0.03019f,    -0.418542f, 0.0f, -0.0294401f,  -0.421853f, 0.0f,
                  -0.0299559f,   -0.425218f, 0.0f, -0.0315031f,  -0.427644f, 0.0f, -0.0338463f,  -0.429435f, 0.0f,
                  -0.0367498f,   -0.4309f,   0.0f, -0.0397346f,  -0.431768f, 0.0f, -0.0434801f,  -0.432347f, 0.0f,
                  -0.0472074f,   -0.432673f, 0.0f, -0.0501373f,  -0.432782f, 0.0f, -0.0601885f,  -0.431862f, 0.0f,
                  -0.0706545f,   -0.4291f,   0.0f, -0.0808125f,  -0.424625f, 0.0f, -0.0899398f,  -0.418562f, 0.0f,
                  -0.0929801f,   -0.418562f, 0.0f, -0.0929801f,  -0.444429f, 0.0f, -0.0839756f,  -0.447734f, 0.0f,
                  -0.0743375f,   -0.450407f, 0.0f, -0.0635231f,  -0.452173f, 0.0f, -0.0509895f,  -0.452762f, 0.0f,
                  -0.0302392f,   -0.450268f, 0.0f, -0.0143215f,  -0.442785f, 0.0f, -0.00419546f, -0.431311f, 0.0f,
                  -0.000820111f, -0.416844f, 0.0f, 0.0988932f,   -0.392143f, 0.0f, 0.090173f,    -0.378466f, 0.0f,
                  0.0761288f,    -0.369793f, 0.0f, 0.0572499f,   -0.366902f, 0.0f, 0.0385521f,   -0.369775f, 0.0f,
                  0.0244716f,    -0.378394f, 0.0f, 0.0156428f,   -0.392053f, 0.0f, 0.0126999f,   -0.410049f, 0.0f,
                  0.0156245f,    -0.427945f, 0.0f, 0.0243985f,   -0.441595f, 0.0f, 0.0384606f,   -0.45024f,  0.0f,
                  0.0572499f,    -0.453122f, 0.0f, 0.0760392f,   -0.45024f,  0.0f, 0.0901013f,   -0.441595f, 0.0f,
                  0.0988753f,    -0.427945f, 0.0f, 0.1018f,      -0.410049f, 0.0f, 0.0672311f,   -0.432154f, 0.0f,
                  0.0642488f,    -0.433751f, 0.0f, 0.0609395f,   -0.434644f, 0.0f, 0.0574664f,   -0.434942f, 0.0f,
                  0.053561f,     -0.434617f, 0.0f, 0.0501075f,   -0.433643f, 0.0f, 0.047107f,    -0.431965f, 0.0f,
                  0.0445599f,    -0.429531f, 0.0f, 0.0424565f,   -0.426094f, 0.0f, 0.0409332f,   -0.421701f, 0.0f,
                  0.0400082f,    -0.416388f, 0.0f, 0.0396999f,   -0.410192f, 0.0f, 0.0400536f,   -0.403392f, 0.0f,
                  0.0411146f,    -0.397854f, 0.0f, 0.0427739f,   -0.39347f,  0.0f, 0.0449227f,   -0.390133f, 0.0f,
                  0.0476691f,    -0.387607f, 0.0f, 0.0505421f,   -0.386092f, 0.0f, 0.0536872f,   -0.385334f, 0.0f,
                  0.0572499f,    -0.385082f, 0.0f, 0.0608942f,   -0.385389f, 0.0f, 0.064284f,    -0.386308f, 0.0f,
                  0.0673116f,    -0.387968f, 0.0f, 0.0698696f,   -0.390493f, 0.0f, 0.0719361f,   -0.393866f, 0.0f,
                  0.0734949f,    -0.398214f, 0.0f, 0.0744736f,   -0.403626f, 0.0f, 0.0747999f,   -0.410192f, 0.0f,
                  0.0744828f,    -0.417074f, 0.0f, 0.0735314f,   -0.422279f, 0.0f, 0.0719452f,   -0.426329f, 0.0f,
                  0.0697234f,    -0.429747f, 0.0f, 0.20334f,     -0.369422f, 0.0f, 0.17724f,     -0.369422f, 0.0f,
                  0.17724f,      -0.426867f, 0.0f, 0.17341f,     -0.428961f, 0.0f, 0.169435f,    -0.430476f, 0.0f,
                  0.165569f,     -0.431395f, 0.0f, 0.162064f,    -0.431702f, 0.0f, 0.157628f,    -0.431395f, 0.0f,
                  0.154296f,     -0.430476f, 0.0f, 0.151866f,    -0.428888f, 0.0f, 0.150141f,    -0.426578f, 0.0f,
                  0.148958f,     -0.423556f, 0.0f, 0.148298f,    -0.41983f,  0.0f, 0.147999f,    -0.415238f, 0.0f,
                  0.1479f,       -0.409618f, 0.0f, 0.1479f,      -0.369422f, 0.0f, 0.1218f,      -0.369422f, 0.0f,
                  0.1218f,       -0.422213f, 0.0f, 0.123614f,    -0.435466f, 0.0f, 0.129055f,    -0.445035f, 0.0f,
                  0.137853f,     -0.45083f,  0.0f, 0.149736f,    -0.452762f, 0.0f, 0.157461f,    -0.452049f, 0.0f,
                  0.16403f,      -0.449909f, 0.0f, 0.170327f,    -0.446397f, 0.0f, 0.17724f,     -0.441568f, 0.0f,
                  0.17724f,      -0.450602f, 0.0f, 0.20334f,     -0.450602f, 0.0f, 0.28868f,     -0.369352f, 0.0f,
                  0.287273f,     -0.369224f, 0.0f, 0.285649f,    -0.369134f, 0.0f, 0.282546f,    -0.369062f, 0.0f,
                  0.276955f,     -0.369677f, 0.0f, 0.270857f,    -0.37152f,  0.0f, 0.263947f,    -0.375208f, 0.0f,
                  0.25592f,      -0.381355f, 0.0f, 0.25592f,     -0.369422f, 0.0f, 0.22982f,     -0.369422f, 0.0f,
                  0.22982f,      -0.450602f, 0.0f, 0.25592f,     -0.450602f, 0.0f, 0.25592f,     -0.396186f, 0.0f,
                  0.260665f,     -0.394703f, 0.0f, 0.265084f,    -0.393726f, 0.0f, 0.269666f,    -0.393183f, 0.0f,
                  0.274899f,     -0.393002f, 0.0f, 0.277658f,    -0.393069f, 0.0f, 0.281031f,    -0.393272f, 0.0f,
                  0.284206f,     -0.393609f, 0.0f, 0.286371f,    -0.394082f, 0.0f, 0.28868f,     -0.394082f, 0.0f,
                  0.355555f,     -0.452338f, 0.0f, 0.362607f,    -0.451066f, 0.0f, 0.36917f,     -0.449072f, 0.0f,
                  0.37546f,      -0.446482f, 0.0f, 0.37546f,     -0.424322f, 0.0f, 0.371773f,    -0.424322f, 0.0f,
                  0.368301f,     -0.42743f,  0.0f, 0.366276f,    -0.428983f, 0.0f, 0.363962f,    -0.430465f, 0.0f,
                  0.361024f,     -0.431883f, 0.0f, 0.357416f,    -0.433103f, 0.0f, 0.353231f,    -0.433942f, 0.0f,
                  0.348558f,     -0.434222f, 0.0f, 0.3392f,      -0.432699f, 0.0f, 0.332249f,    -0.428129f, 0.0f,
                  0.327937f,     -0.420621f, 0.0f, 0.3265f,      -0.410285f, 0.0f, 0.327901f,    -0.400085f, 0.0f,
                  0.332105f,     -0.392259f, 0.0f, 0.338912f,    -0.387281f, 0.0f, 0.348122f,    -0.385622f, 0.0f,
                  0.352535f,     -0.385888f, 0.0f, 0.356369f,    -0.386685f, 0.0f, 0.359768f,    -0.387885f, 0.0f,
                  0.362877f,     -0.38936f,  0.0f, 0.365743f,    -0.391063f, 0.0f, 0.368121f,    -0.392804f, 0.0f,
                  0.371773f,     -0.395882f, 0.0f, 0.37546f,     -0.395882f, 0.0f, 0.37546f,     -0.37361f,  0.0f,
                  0.369141f,     -0.370981f, 0.0f, 0.362352f,    -0.368896f, 0.0f, 0.355003f,    -0.367536f, 0.0f,
                  0.347003f,     -0.367082f, 0.0f, 0.337896f,    -0.367679f, 0.0f, 0.329116f,    -0.36947f,  0.0f,
                  0.321006f,     -0.372545f, 0.0f, 0.313911f,    -0.376996f, 0.0f, 0.307854f,    -0.383129f, 0.0f,
                  0.303301f,     -0.390673f, 0.0f, 0.30045f,     -0.399701f, 0.0f, 0.2995f,      -0.410285f, 0.0f,
                  0.300387f,     -0.420378f, 0.0f, 0.303048f,    -0.429098f, 0.0f, 0.30732f,     -0.436443f, 0.0f,
                  0.313042f,     -0.442415f, 0.0f, 0.320129f,    -0.447009f, 0.0f, 0.328356f,    -0.450229f, 0.0f,
                  0.337616f,     -0.452129f, 0.0f, 0.347799f,    -0.452762f, 0.0f, 0.47466f,     -0.405684f, 0.0f,
                  0.472161f,     -0.389101f, 0.0f, 0.464666f,    -0.376905f, 0.0f, 0.452209f,    -0.369403f, 0.0f,
                  0.434826f,     -0.366902f, 0.0f, 0.415607f,    -0.369838f, 0.0f, 0.400968f,    -0.378647f, 0.0f,
                  0.391707f,     -0.392478f, 0.0f, 0.38862f,     -0.410482f, 0.0f, 0.391882f,    -0.42846f,  0.0f,
                  0.401669f,     -0.441776f, 0.0f, 0.417581f,    -0.450016f, 0.0f, 0.43922f,     -0.452762f, 0.0f,
                  0.4483f,       -0.452363f, 0.0f, 0.456546f,    -0.451166f, 0.0f, 0.464629f,    -0.44908f,  0.0f,
                  0.47322f,      -0.446015f, 0.0f, 0.47322f,     -0.425042f, 0.0f, 0.470306f,    -0.425042f, 0.0f,
                  0.46497f,      -0.428407f, 0.0f, 0.457994f,    -0.43155f,  0.0f, 0.450072f,    -0.433824f, 0.0f,
                  0.441894f,     -0.434582f, 0.0f, 0.430374f,    -0.433308f, 0.0f, 0.422041f,    -0.429486f, 0.0f,
                  0.416841f,     -0.423262f, 0.0f, 0.41472f,     -0.414782f, 0.0f, 0.47466f,     -0.414782f, 0.0f,
                  0.414647f,     -0.399482f, 0.0f, 0.416299f,    -0.392068f, 0.0f, 0.420093f,    -0.386999f, 0.0f,
                  0.42563f,      -0.384076f, 0.0f, 0.432512f,    -0.383102f, 0.0f, 0.439574f,    -0.38413f,  0.0f,
                  0.444494f,     -0.387215f, 0.0f, 0.447435f,    -0.392339f, 0.0f, 0.44856f,     -0.399482f, 0.0f };

int faces[] = {
    21,  22,  1,   0, 1, 38,  21,  1,   0, 1, 37,  38,  1,   0, 1, 0,   1,   22,  0, 1, 20,  0,   22,  0, 1,
    19,  20,  22,  0, 1, 18,  19,  22,  0, 1, 17,  18,  22,  0, 1, 16,  17,  22,  0, 1, 16,  22,  23,  0, 2,
    15,  16,  23,  0, 1, 15,  23,  24,  0, 2, 14,  15,  24,  0, 1, 13,  14,  24,  0, 1, 13,  24,  25,  0, 2,
    37,  1,   2,   0, 2, 36,  37,  2,   0, 1, 36,  2,   3,   0, 2, 36,  3,   4,   0, 2, 35,  36,  4,   0, 1,
    35,  4,   5,   0, 2, 34,  35,  5,   0, 1, 34,  5,   6,   0, 2, 33,  34,  6,   0, 1, 33,  6,   7,   0, 2,
    32,  33,  7,   0, 1, 12,  13,  25,  0, 1, 12,  25,  26,  0, 2, 12,  26,  27,  0, 2, 11,  12,  27,  0, 1,
    11,  27,  28,  0, 2, 11,  28,  29,  0, 2, 32,  7,   8,   0, 2, 31,  32,  8,   0, 1, 30,  31,  8,   0, 1,
    30,  8,   9,   0, 2, 29,  30,  9,   0, 1, 11,  29,  9,   0, 0, 10,  11,  9,   0, 5, 75,  76,  57,  0, 3,
    74,  75,  57,  0, 1, 57,  40,  41,  0, 2, 74,  57,  41,  0, 0, 74,  41,  42,  0, 2, 74,  42,  43,  0, 2,
    74,  43,  44,  0, 2, 74,  44,  45,  0, 2, 40,  57,  58,  0, 2, 74,  45,  46,  0, 2, 73,  74,  46,  0, 1,
    73,  46,  47,  0, 2, 71,  72,  73,  0, 3, 70,  71,  73,  0, 1, 70,  73,  47,  0, 0, 70,  47,  48,  0, 2,
    69,  70,  48,  0, 1, 69,  48,  49,  0, 2, 69,  49,  50,  0, 2, 68,  69,  50,  0, 1, 68,  50,  51,  0, 2,
    68,  51,  52,  0, 2, 67,  68,  52,  0, 1, 40,  58,  59,  0, 2, 39,  40,  59,  0, 1, 39,  59,  60,  0, 2,
    39,  60,  61,  0, 2, 56,  39,  61,  0, 1, 55,  56,  61,  0, 1, 55,  61,  62,  0, 2, 55,  62,  63,  0, 2,
    55,  63,  64,  0, 2, 54,  55,  64,  0, 1, 54,  64,  65,  0, 2, 54,  65,  66,  0, 2, 53,  54,  66,  0, 1,
    53,  66,  67,  0, 2, 53,  67,  52,  0, 4, 83,  84,  77,  0, 3, 83,  77,  78,  0, 2, 81,  82,  83,  0, 3,
    80,  81,  83,  0, 1, 80,  83,  78,  0, 0, 79,  80,  78,  0, 5, 140, 141, 142, 0, 3, 139, 140, 142, 0, 1,
    139, 142, 143, 0, 2, 138, 139, 143, 0, 1, 138, 143, 144, 0, 2, 137, 138, 144, 0, 1, 137, 144, 145, 0, 2,
    137, 145, 146, 0, 2, 136, 137, 146, 0, 1, 136, 146, 147, 0, 2, 135, 136, 147, 0, 1, 134, 135, 147, 0, 1,
    133, 134, 147, 0, 1, 132, 133, 147, 0, 1, 132, 147, 148, 0, 2, 131, 132, 148, 0, 1, 130, 131, 148, 0, 1,
    107, 108, 109, 0, 3, 106, 107, 109, 0, 1, 106, 109, 110, 0, 2, 105, 106, 110, 0, 1, 105, 110, 111, 0, 2,
    104, 105, 111, 0, 1, 104, 111, 112, 0, 2, 103, 104, 112, 0, 1, 103, 112, 113, 0, 2, 103, 113, 114, 0, 2,
    102, 103, 114, 0, 1, 101, 102, 114, 0, 1, 100, 101, 114, 0, 1, 99,  100, 114, 0, 1, 99,  114, 115, 0, 2,
    98,  99,  115, 0, 1, 97,  98,  115, 0, 1, 130, 148, 149, 0, 2, 129, 130, 149, 0, 1, 129, 149, 150, 0, 2,
    128, 129, 150, 0, 1, 97,  115, 116, 0, 2, 96,  97,  116, 0, 1, 96,  116, 117, 0, 2, 95,  96,  117, 0, 1,
    95,  117, 118, 0, 2, 94,  95,  118, 0, 1, 94,  118, 119, 0, 2, 94,  119, 120, 0, 2, 93,  94,  120, 0, 1,
    93,  120, 121, 0, 2, 92,  93,  121, 0, 1, 92,  121, 122, 0, 2, 91,  92,  122, 0, 1, 91,  122, 123, 0, 2,
    91,  123, 124, 0, 2, 90,  91,  124, 0, 1, 89,  90,  124, 0, 1, 89,  124, 125, 0, 2, 88,  89,  125, 0, 1,
    87,  88,  125, 0, 1, 87,  125, 126, 0, 2, 86,  87,  126, 0, 1, 86,  126, 127, 0, 2, 85,  86,  127, 0, 1,
    150, 85,  127, 0, 1, 128, 150, 127, 0, 4, 152, 186, 187, 0, 2, 152, 187, 188, 0, 2, 186, 152, 153, 0, 2,
    152, 188, 189, 0, 2, 186, 153, 154, 0, 2, 152, 189, 190, 0, 2, 186, 154, 155, 0, 2, 185, 186, 155, 0, 1,
    184, 185, 155, 0, 1, 183, 184, 155, 0, 1, 183, 155, 156, 0, 2, 182, 183, 156, 0, 1, 181, 182, 156, 0, 1,
    181, 156, 157, 0, 2, 180, 181, 157, 0, 1, 180, 157, 158, 0, 2, 179, 180, 158, 0, 1, 178, 179, 158, 0, 1,
    178, 158, 159, 0, 2, 177, 178, 159, 0, 1, 176, 177, 159, 0, 1, 176, 159, 160, 0, 2, 175, 176, 160, 0, 1,
    175, 160, 161, 0, 2, 174, 175, 161, 0, 1, 173, 174, 161, 0, 1, 173, 161, 162, 0, 2, 172, 173, 162, 0, 1,
    171, 172, 162, 0, 1, 170, 171, 162, 0, 1, 170, 162, 163, 0, 2, 169, 170, 163, 0, 1, 168, 169, 163, 0, 1,
    167, 168, 163, 0, 1, 167, 163, 164, 0, 2, 198, 167, 164, 0, 1, 197, 198, 164, 0, 1, 197, 164, 165, 0, 2,
    196, 197, 165, 0, 1, 196, 165, 166, 0, 2, 195, 196, 166, 0, 1, 194, 195, 166, 0, 1, 194, 166, 151, 0, 2,
    193, 194, 151, 0, 1, 192, 193, 151, 0, 1, 192, 151, 152, 0, 2, 191, 192, 152, 0, 1, 191, 152, 190, 0, 4,
    225, 226, 199, 0, 3, 224, 225, 199, 0, 1, 214, 215, 216, 0, 3, 213, 214, 216, 0, 1, 212, 213, 216, 0, 1,
    211, 212, 216, 0, 1, 211, 216, 217, 0, 2, 210, 211, 217, 0, 1, 210, 217, 218, 0, 2, 209, 210, 218, 0, 1,
    209, 218, 219, 0, 2, 208, 209, 219, 0, 1, 208, 219, 220, 0, 2, 207, 208, 220, 0, 1, 207, 220, 221, 0, 2,
    206, 207, 221, 0, 1, 206, 221, 222, 0, 2, 205, 206, 222, 0, 1, 205, 222, 223, 0, 2, 204, 205, 223, 0, 1,
    204, 223, 224, 0, 2, 203, 204, 224, 0, 1, 202, 203, 224, 0, 1, 199, 200, 201, 0, 3, 224, 199, 201, 0, 0,
    202, 224, 201, 0, 4, 247, 248, 227, 0, 3, 246, 247, 227, 0, 1, 246, 227, 228, 0, 2, 246, 228, 229, 0, 2,
    245, 246, 229, 0, 1, 245, 229, 230, 0, 2, 245, 230, 231, 0, 2, 244, 245, 231, 0, 1, 244, 231, 232, 0, 2,
    243, 244, 232, 0, 1, 243, 232, 233, 0, 2, 242, 243, 233, 0, 1, 242, 233, 234, 0, 2, 241, 242, 234, 0, 1,
    240, 241, 234, 0, 1, 239, 240, 234, 0, 1, 237, 238, 239, 0, 3, 236, 237, 239, 0, 1, 236, 239, 234, 0, 0,
    235, 236, 234, 0, 5, 276, 277, 278, 0, 3, 275, 276, 278, 0, 1, 274, 275, 278, 0, 1, 274, 278, 279, 0, 2,
    273, 274, 279, 0, 1, 272, 273, 279, 0, 1, 272, 279, 280, 0, 2, 271, 272, 280, 0, 1, 271, 280, 281, 0, 2,
    270, 271, 281, 0, 1, 270, 281, 282, 0, 2, 269, 270, 282, 0, 1, 269, 282, 283, 0, 2, 268, 269, 283, 0, 1,
    268, 283, 284, 0, 2, 252, 253, 254, 0, 3, 252, 254, 255, 0, 2, 252, 255, 256, 0, 2, 251, 252, 256, 0, 1,
    251, 256, 257, 0, 2, 251, 257, 258, 0, 2, 250, 251, 258, 0, 1, 250, 258, 259, 0, 2, 249, 250, 259, 0, 1,
    249, 259, 260, 0, 2, 298, 249, 260, 0, 1, 298, 260, 261, 0, 2, 297, 298, 261, 0, 1, 297, 261, 262, 0, 2,
    296, 297, 262, 0, 1, 296, 262, 263, 0, 2, 295, 296, 263, 0, 1, 294, 295, 263, 0, 1, 294, 263, 264, 0, 2,
    293, 294, 264, 0, 1, 292, 293, 264, 0, 1, 291, 292, 264, 0, 1, 291, 264, 265, 0, 2, 290, 291, 265, 0, 1,
    289, 290, 265, 0, 1, 289, 265, 266, 0, 2, 288, 289, 266, 0, 1, 287, 288, 266, 0, 1, 287, 266, 267, 0, 2,
    286, 287, 267, 0, 1, 285, 286, 267, 0, 1, 284, 285, 267, 0, 1, 268, 284, 267, 0, 4, 335, 327, 299, 0, 1,
    335, 299, 300, 0, 2, 334, 335, 300, 0, 1, 334, 300, 301, 0, 2, 334, 301, 302, 0, 2, 333, 334, 302, 0, 1,
    333, 302, 303, 0, 2, 332, 333, 303, 0, 1, 331, 332, 303, 0, 1, 331, 303, 304, 0, 2, 330, 331, 304, 0, 1,
    329, 330, 304, 0, 1, 329, 304, 305, 0, 2, 328, 329, 305, 0, 1, 328, 305, 306, 0, 2, 327, 328, 306, 0, 1,
    327, 306, 307, 0, 2, 325, 326, 299, 0, 3, 325, 299, 327, 0, 0, 325, 327, 307, 0, 0, 325, 307, 308, 0, 2,
    324, 325, 308, 0, 1, 324, 308, 309, 0, 2, 324, 309, 310, 0, 2, 323, 324, 310, 0, 1, 322, 323, 310, 0, 1,
    322, 310, 311, 0, 2, 321, 322, 311, 0, 1, 321, 311, 312, 0, 2, 320, 321, 312, 0, 1, 320, 312, 313, 0, 2,
    319, 320, 313, 0, 1, 319, 313, 314, 0, 2, 315, 316, 317, 0, 3, 315, 317, 318, 0, 2, 314, 315, 318, 0, 1,
    319, 314, 318, 0, 4,
};

#if MAX_VERSION_MAJOR >= 25
MaxSDK::SharedMeshPtr g_globalMesh;
#else
Mesh g_globalMesh;
#endif
} // namespace

namespace krakatoa {
namespace max3d {

extern void build_icon_mesh( Mesh& outMesh, float verts[], int faces[], int vertCount, int faceCount );

}
} // namespace krakatoa

#if MAX_VERSION_MAJOR >= 25

static void InitializeIconMesh() {

    if( !g_globalMesh ) {
        g_globalMesh = new MaxSDK::SharedMesh();
        int vertCount = sizeof( verts ) / sizeof( verts[0] ) / 3;
        int faceCount = sizeof( faces ) / sizeof( faces[0] ) / 5;

        krakatoa::max3d::build_icon_mesh( g_globalMesh->GetMesh(), verts, faces, vertCount, faceCount );

        g_globalMesh->GetMesh().buildBoundingBox();
    }
}

Mesh* GetPRTSourceIconMesh() {
    InitializeIconMesh();
    return g_globalMesh->GetMeshPtr();
}

MaxSDK::SharedMeshPtr GetPRTSourceIconMeshShared() {
    InitializeIconMesh();
    return g_globalMesh;
}

#else

Mesh* GetPRTSourceIconMesh() {
    if( g_globalMesh.getNumVerts() == 0 ) {
        int vertCount = sizeof( verts ) / sizeof( verts[0] ) / 3;
        int faceCount = sizeof( faces ) / sizeof( faces[0] ) / 5;

        krakatoa::max3d::build_icon_mesh( g_globalMesh, verts, faces, vertCount, faceCount );

        g_globalMesh.buildBoundingBox();
    }

    return &g_globalMesh;
}

#endif
